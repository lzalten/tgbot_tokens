import telebot
import pymysql
import inline_keyboards
import Message_Settings
import Image_Settings

import sqlite3
connection = sqlite3.connect('telegrambot.db')


with connection:
    cursor = connection.cursor()

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                        ID INTEGER PRIMARY KEY,
                        Referal TEXT,
                        Balance INTEGER,
                        Wallet TEXT
                    )''')

    connection.commit()

    # –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å SELECT
    cursor.execute("SELECT * FROM users")
    rows = cursor.fetchall()
    for row in rows:
        print(row)

bot = telebot.TeleBot("7338083536:AAHqzQenO42JdSAiM5gjgWP-hAQgs8gS4FQ")

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    if message.chat and message.chat.id:
        member = bot.get_chat_member(-1002151936509, message.chat.id)
        #–£—Å–ª–æ–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
        if member.status in ['member', 'administrator', 'creator']:
            bot.send_message(message.chat.id, "üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é", reply_markup=inline_keyboards.MainMenu())
            bot.send_photo(message.chat.id, photo=Image_Settings.PhotoTake['Welcome'], caption=Message_Settings.MENU_message, parse_mode='Markdown', reply_markup=inline_keyboards.InviteButton())
        else:
            bot.reply_to(message, Message_Settings.WELCOME_message, reply_markup=inline_keyboards.welcome_keys())
    else:
        # Handle case where chat ID is missing or invalid
        bot.reply_to(message, "Invalid chat ID")
@bot.message_handler(func=lambda message: True)
def error_message(message):
    if message.text == '–£—Å–ª–æ–≤–∏—è\\Terms üìÉ':
        bot.send_photo(message.chat.id, Image_Settings.PhotoTake['Terms'], caption=Message_Settings.Terms_message,parse_mode='Markdown', reply_markup=inline_keyboards.InviteButton())
    elif message.text == '–ë–∞–ª–∞–Ω—Å\\Balance üôÇ':
        bot.send_photo(message.chat.id, Image_Settings.PhotoTake['Balance'], caption=Message_Settings.Balance_message,parse_mode='Markdown', reply_markup=inline_keyboards.InviteButton())
    elif message.text == '–ö–æ—à–µ–ª–µ–∫\\Wallet üëõ':
        bot.send_photo(message.chat.id, Image_Settings.PhotoTake['Wallet'], caption=Message_Settings.Wallet_message,parse_mode='Markdown',reply_markup=inline_keyboards.CancleMenu())
        sent = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ—à–µ–ª–µ–∫:")
        bot.register_next_step_handler(sent, save_wallet)
    elif message.text == 'Twitter[BONUS] üïä':
        bot.send_photo(message.chat.id, Image_Settings.PhotoTake['Twitter'], caption=Message_Settings.Twitter_message,parse_mode='Markdown')
    elif message.text == 'Terms [ENG] üìå':
        bot.send_photo(message.chat.id, Image_Settings.PhotoTake['TermsENG'], caption=Message_Settings.TermsENG_message,parse_mode='Markdown', reply_markup=inline_keyboards.InviteButton())
    elif message.text == "GETID":
        bot.send_message(message.chat.id, message.chat.id)    
    else:
        bot.reply_to(message, Message_Settings.ERROR_message, parse_mode='Markdown')

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "check":
        #–£—Å–ª–æ–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
        UserBoxID = call.message.chat.id
        member = bot.get_chat_member(-1002151936509, UserBoxID)
        if member.status in ['member', 'administrator', 'creator']:
            bot.delete_message(call.message.chat.id, call.message.message_id)
            bot.send_message(call.message.chat.id, "üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é", reply_markup=inline_keyboards.MainMenu())
            bot.send_photo(call.message.chat.id, photo = Image_Settings.PhotoTake['Welcome'], caption= Message_Settings.MENU_message, parse_mode='Markdown',reply_markup=inline_keyboards.InviteButton())
            connection.ping()
            with connection.cursor() as cursor:
            # Create a new record
                sql = "INSERT INTO `users`(`ID`, `Referal`, `Balance`, `Wallet`) VALUES (%s, %s, %s, %s)" %(UserBoxID, 123, 0, '"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"')
                print(cursor.execute(sql))
            connection.commit()
        else:
            bot.delete_message(call.message.chat.id, call.message.message_id)
            bot.send_message(call.message.chat.id, Message_Settings.WELCOME_message, reply_markup = inline_keyboards.welcome_keys())

def save_wallet(message):
    if message.text == '–û—Ç–º–µ–Ω–∞‚ùå':
        bot.send_message(message.chat.id, "üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é", reply_markup=inline_keyboards.MainMenu())
        bot.send_photo(message.chat.id, photo = Image_Settings.PhotoTake['Welcome'], caption= Message_Settings.MENU_message, parse_mode='Markdown',reply_markup=inline_keyboards.InviteButton())
    else:
        wallet_to_save = message.text
        answer_to_wallet = "–û—Ç–ª–∏—á–Ω–æ! –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –∫–æ—à–µ–ª–µ–∫: %s\n–ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–æ–∫–µ–Ω—ã $SMILE –Ω–∞ –¥–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é AIRDROP\n\n_–ï—Å–ª–∏ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞, –∏–ª–∏ –∂–µ —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ —Å–º–µ–Ω–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞ –≤–æ –≤–∫–ª–∞–¥–∫—É Wallet_"%wallet_to_save
        bot.send_message(message.chat.id, answer_to_wallet, parse_mode="Markdown",reply_markup=inline_keyboards.MainMenu())
        UserBoxID = message.chat.id

        sql = "UPDATE users SET Wallet = ? WHERE ID = ?"
        data = (wallet_to_save, UserBoxID)

        # –ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ UPDATE —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        with connection:
            cursor = connection.cursor()
            cursor.execute(sql, data)
            print(cursor.rowcount)  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã—Ö —Å—Ç—Ä–æ–∫

        # –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π
        connection.commit()



bot.infinity_polling()
